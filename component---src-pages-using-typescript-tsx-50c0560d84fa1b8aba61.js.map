{"version":3,"sources":["webpack:///./src/pages/using-typescript.tsx","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["UsingTypescript","data","path","title","site","buildTime","href","to","query","Header","siteTitle","Navbar","collapseOnSelect","expand","bg","variant","sticky","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Link","NavDropdown","Item","Divider","eventKey","defaultProps","Layout","children","useStaticQuery","siteMetadata","style","marginTop","Date","getFullYear"],"mappings":"6FAAA,0GAyBeA,UAZyC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACtD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,qBACX,sEACA,uEAA4C,wCAA5C,+DAAyH,2CAAzH,wEACA,uEAA4C,0CAA5C,oBAAgF,0CAAhF,gBAAgH,yCAAhH,UACA,6DAAkCD,EAAlC,wBAA6DD,EAAKG,KAAKC,UAAvE,KACA,8DAAmC,uBAAGC,KAAK,6CAAR,kCAAnC,KACA,kBAAC,OAAD,CAAMC,GAAG,KAAT,6BAMG,IAAMC,EAAQ,c,gJCtBfC,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACX,kBAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KACxBC,GAAG,QACHC,QAAQ,QACRC,OAAO,OACb,kBAAC,OAAD,CAAMT,GAAG,KACT,kBAACI,EAAA,EAAOM,MAAR,KAAc,4BAAKP,KAGnB,kBAACC,EAAA,EAAOO,OAAR,CAAeC,gBAAc,0BAC7B,kBAACR,EAAA,EAAOS,SAAR,CAAiBC,GAAG,yBAClB,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACb,kBAACD,EAAA,EAAIE,KAAL,CAAUlB,KAAK,aAAf,YACA,kBAACgB,EAAA,EAAIE,KAAL,CAAUlB,KAAK,YAAf,WACA,kBAACmB,EAAA,EAAD,CAAatB,MAAM,WAAWkB,GAAG,2BAC/B,kBAACI,EAAA,EAAYC,KAAb,CAAkBpB,KAAK,eAAvB,UACA,kBAACmB,EAAA,EAAYC,KAAb,CAAkBpB,KAAK,eAAvB,kBACA,kBAACmB,EAAA,EAAYC,KAAb,CAAkBpB,KAAK,eAAvB,aACA,kBAACmB,EAAA,EAAYE,QAAb,MACA,kBAACF,EAAA,EAAYC,KAAb,CAAkBpB,KAAK,eAAvB,oBAGJ,kBAACgB,EAAA,EAAD,KACE,kBAACA,EAAA,EAAIE,KAAL,CAAUlB,KAAK,UAAf,cACA,kBAACgB,EAAA,EAAIE,KAAL,CAAUI,SAAU,EAAGtB,KAAK,UAA5B,kBAYVG,EAAOoB,aAAe,CACpBnB,UAAU,IAGGD,Q,UCCAqB,IAhCA,SAAC,GAAkB,IAAD,EAAfC,EAAe,EAAfA,SACV9B,EAAO+B,yBAAe,cAU5B,OACE,oCACE,kBAAC,EAAD,CAAQtB,WAAW,UAAAT,EAAKG,KAAK6B,oBAAV,eAAwB9B,QAAxB,UACnB,6BACE,8BAAO4B,GACP,4BAAQG,MAAO,CACbC,UAAU,SADZ,MAGK,IAAIC,MAAOC,cAHhB,mBAKE,uBAAG/B,KAAK,4BAAR,e","file":"component---src-pages-using-typescript-tsx-50c0560d84fa1b8aba61.js","sourcesContent":["// If you don't want to use TypeScript you can delete this file!\r\nimport React from \"react\"\r\nimport { PageProps, Link, graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\ntype DataProps = {\r\n  site: {\r\n    buildTime: string\r\n  }\r\n}\r\n\r\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({ data, path }) => (\r\n  <Layout>\r\n    <SEO title=\"Using TypeScript\" />\r\n    <h1>Gatsby supports TypeScript by default!</h1>\r\n    <p>This means that you can create and write <em>.ts/.tsx</em> files for your pages, components etc. Please note that the <em>gatsby-*.js</em> files (like gatsby-node.js) currently don't support TypeScript yet.</p>\r\n    <p>For type checking you'll want to install <em>typescript</em> via npm and run <em>tsc --init</em> to create a <em>.tsconfig</em> file.</p>\r\n    <p>You're currently on the page \"{path}\" which was built on {data.site.buildTime}.</p>\r\n    <p>To learn more, head over to our <a href=\"https://www.gatsbyjs.com/docs/typescript/\">documentation about TypeScript</a>.</p>\r\n    <Link to=\"/\">Go back to the homepage</Link>\r\n  </Layout>\r\n)\r\n\r\nexport default UsingTypescript\r\n\r\nexport const query = graphql`\r\n  {\r\n    site {\r\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\r\n    }\r\n  }\r\n`\r\n","import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport {Navbar, Nav, NavDropdown } from 'react-bootstrap'\r\n\r\nconst Header = ({ siteTitle }) => (\r\n    <Navbar collapseOnSelect expand=\"lg\"\r\n            bg='light'\r\n            variant=\"light\"\r\n            sticky='top' >\r\n      <Link to='/'>\r\n      <Navbar.Brand><h1>{siteTitle}</h1></Navbar.Brand>\r\n      </Link>\r\n      \r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className='ml-auto'>\r\n          <Nav.Link href=\"#features\">Features</Nav.Link>\r\n          <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\r\n          <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\r\n            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n            <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n            <NavDropdown.Divider />\r\n            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n          </NavDropdown>\r\n        </Nav>\r\n        <Nav>\r\n          <Nav.Link href=\"#deets\">More deets</Nav.Link>\r\n          <Nav.Link eventKey={2} href=\"#memes\">\r\n            Dank memes\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\r\n      <div>\r\n        <main>{children}</main>\r\n        <footer style={{\r\n          marginTop: `2rem`\r\n        }}>\r\n          Â© {new Date().getFullYear()}, Built with\r\n          {` `}\r\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\r\n        </footer>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}